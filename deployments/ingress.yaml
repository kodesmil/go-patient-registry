apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ks-backend-http
  labels:
    app.kubernetes.io/name: ks-backend
  annotations:
    cert-manager.io/cluster-issuer: kodesmil-issuer
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - "admin.qa.api.kodesmil.com"
      secretName: letsencrypt-cert-admin
  rules:
    - host: admin.qa.api.kodesmil.com
      http:
        paths:
          - path: /admin
            backend:
              serviceName: ks-backend
              servicePort: admin
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ks-backend-grpc
  labels:
    app.kubernetes.io/name: ks-backend
  annotations:
    cert-manager.io/cluster-issuer: kodesmil-issuer
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: GRPC
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - "swanly.qa.api.kodesmil.com"
      secretName: letsencrypt-cert-swanly
  rules:
    - host: swanly.qa.api.kodesmil.com
      http:
        paths:
          - path: /
            backend:
              serviceName: ks-backend
              servicePort: grpc